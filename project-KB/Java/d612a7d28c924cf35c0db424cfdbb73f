diff --git a/xstream/src/java/com/thoughtworks/xstream/io/xml/BEAStaxDriver.java b/xstream/src/java/com/thoughtworks/xstream/io/xml/BEAStaxDriver.java
index 973db0f10..5b8b3c5d1 100644
--- a/xstream/src/java/com/thoughtworks/xstream/io/xml/BEAStaxDriver.java
+++ b/xstream/src/java/com/thoughtworks/xstream/io/xml/BEAStaxDriver.java
@@ -1,11 +1,11 @@
 /*
- * Copyright (C) 2009, 2011, 2014 XStream Committers.
+ * Copyright (C) 2009, 2011, 2014, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
  * style license a copy of which has been included with this distribution in
  * the LICENSE.txt file.
- * 
+ *
  * Created on 29. April 2009 by Joerg Schaible
  */
 package com.thoughtworks.xstream.io.xml;
@@ -20,7 +20,7 @@
 
 /**
  * A driver using the BEA StAX implementation.
- * 
+ *
  * @author J&ouml;rg Schaible
  * @since 1.4
  */
@@ -66,7 +66,9 @@ public BEAStaxDriver(final NameCoder nameCoder) {
 
     @Override
     protected XMLInputFactory createInputFactory() {
-        return new MXParserFactory();
+        final XMLInputFactory instance = new MXParserFactory();
+//        instance.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, true);
+        return instance;
     }
 
     @Override
diff --git a/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java b/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
index b791d0b9b..18d556c5c 100644
--- a/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
+++ b/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
@@ -1,12 +1,12 @@
 /*
  * Copyright (C) 2004, 2005, 2006 Joe Walnes.
- * Copyright (C) 2006, 2007, 2008, 2009, 2011, 2014 XStream Committers.
+ * Copyright (C) 2006, 2007, 2008, 2009, 2011, 2014, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
  * style license a copy of which has been included with this distribution in
  * the LICENSE.txt file.
- * 
+ *
  * Created on 07. March 2004 by Joe Walnes
  */
 package com.thoughtworks.xstream.io.xml;
@@ -61,8 +61,13 @@ public DomDriver(final String encoding) {
      */
     public DomDriver(final String encoding, final NameCoder nameCoder) {
         super(nameCoder);
-        documentBuilderFactory = DocumentBuilderFactory.newInstance();
         this.encoding = encoding;
+        documentBuilderFactory = DocumentBuilderFactory.newInstance();
+        try {
+            documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", false);
+        } catch (final ParserConfigurationException e) {
+            throw new StreamException(e);
+        }
     }
 
     /**
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractXMLReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractXMLReaderTest.java
index 7f818ef8d..d5c4d7b1b 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractXMLReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractXMLReaderTest.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2004, 2005 Joe Walnes.
- * Copyright (C) 2006, 2007, 2008, 2011, 2012, 2013 XStream Committers.
+ * Copyright (C) 2006, 2007, 2008, 2011, 2012, 2013, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -242,6 +242,15 @@ public void testCanReadCDATAWithEmbeddedTags() throws Exception {
         assertEquals(content, xmlReader.getValue());
     }
     
+    public void testIsXXEVulnerable() throws Exception {
+        HierarchicalStreamReader xmlReader = createReader("<?xml version=\"1.0\"?>\n"
+                +"<!DOCTYPE root [\n"
+                +"<!ENTITY % passwd SYSTEM \"src/test/$Package.java\">\n"
+                +"%passwd;\n"
+                +"]><string>test</string>");
+        assertEquals("test", xmlReader.getValue());
+    }
+    
     // TODO: See XSTR-473
     public void todoTestCanReadNullValueInString() throws Exception {
         HierarchicalStreamReader xmlReader = createReader("<string>&#x0;</string>");
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/BEAStaxReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/BEAStaxReaderTest.java
index cc2a10a53..6595ff457 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/BEAStaxReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/BEAStaxReaderTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2011 XStream Committers.
+ * Copyright (C) 2011, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -10,6 +10,7 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
@@ -20,9 +21,28 @@ public class BEAStaxReaderTest extends AbstractXMLReaderTest {
     private HierarchicalStreamDriver driver = new BEAStaxDriver();
 
     // factory method
+    @Override
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
         return driver.createReader(new StringReader(xml));
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        // Implementation ignores XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES
+        todoIsXXEVulnerable();
+    }
+
+    public void todoIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + XStreamException.class.getName() + " expected");
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
+    }
+
     // inherits tests from superclass
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
index a6a7ad716..08d90b5f0 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2004 Joe Walnes.
- * Copyright (C) 2006, 2007 XStream Committers.
+ * Copyright (C) 2006, 2007, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -11,8 +11,11 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
+import java.io.StringReader;
+
 import org.dom4j.Document;
 import org.dom4j.DocumentException;
 import org.dom4j.DocumentHelper;
@@ -22,7 +25,7 @@ public class Dom4JReaderTest extends AbstractXMLReaderTest {
 
     // factory method
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
-        return new Dom4JReader(DocumentHelper.parseText(xml));
+        return new Dom4JDriver().createReader(new StringReader(xml));
     }
 
     public void testCanReadFromElementOfLargerDocument() throws DocumentException {
@@ -42,4 +45,17 @@ public void testCanReadFromElementOfLargerDocument() throws DocumentException {
         assertEquals("tiny", xmlReader.getNodeName());
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + XStreamException.class.getName() + " expected");
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
+    }
+
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
index ab94ebe5c..a6e8bb9ec 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
@@ -11,6 +11,7 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
 import org.w3c.dom.Document;
@@ -20,6 +21,7 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 
 import java.io.ByteArrayInputStream;
+import java.io.StringReader;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -27,7 +29,7 @@ public class DomReaderTest extends AbstractXMLReaderTest {
 
     // factory method
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
-        return new DomReader(buildDocument(xml));
+        return new DomDriver().createReader(new StringReader(xml));
     }
 
     private Document buildDocument(String xml) throws Exception {
@@ -82,4 +84,16 @@ public void testExposesAttributesKeysAndValuesByIndex() throws Exception {
         assertEquals(0, xmlReader.getAttributeCount());
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + XStreamException.class.getName() + " expected");
+        } catch (final XStreamException e) {
+            final String message = e.getMessage().toLowerCase();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
+    }
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java
index 8d763a45f..3b9def70e 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2013 XStream Committers.
+ * Copyright (C) 2013, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -10,9 +10,12 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
 import org.jdom2.Document;
+import org.jdom2.Element;
+import org.jdom2.input.JDOMParseException;
 import org.jdom2.input.SAXBuilder;
 
 import java.io.StringReader;
@@ -21,8 +24,38 @@ public class JDom2ReaderTest extends AbstractXMLReaderTest {
 
     // factory method
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
+        return new JDom2Driver().createReader(new StringReader(xml));
+    }
+
+    public void testCanReadFromElementOfLargerDocument() throws Exception {
+        String xml ="" +
+                "<big>" +
+                "  <small>" +
+                "    <tiny/>" +
+                "  </small>" +
+                "  <small-two>" +
+                "  </small-two>" +
+                "</big>";
         Document document = new SAXBuilder().build(new StringReader(xml));
-        return new JDom2Reader(document);
+        Element element = document.getRootElement().getChild("small");
+
+        HierarchicalStreamReader xmlReader = new JDom2Reader(element);
+        assertEquals("small", xmlReader.getNodeName());
+        xmlReader.moveDown();
+        assertEquals("tiny", xmlReader.getNodeName());
+    }
+
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + JDOMParseException.class.getName() + " expected");
+        } catch (final JDOMParseException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
     }
 
     // inherits tests from superclass
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java
index 506cb86fb..360099769 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2004 Joe Walnes.
- * Copyright (C) 2006, 2007 XStream Committers.
+ * Copyright (C) 2006, 2007, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -11,9 +11,12 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
 import org.jdom.Document;
+import org.jdom.Element;
+import org.jdom.input.JDOMParseException;
 import org.jdom.input.SAXBuilder;
 
 import java.io.StringReader;
@@ -22,8 +25,38 @@ public class JDomReaderTest extends AbstractXMLReaderTest {
 
     // factory method
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
+        return new JDomDriver().createReader(new StringReader(xml));
+    }
+
+    public void testCanReadFromElementOfLargerDocument() throws Exception {
+        String xml ="" +
+                "<big>" +
+                "  <small>" +
+                "    <tiny/>" +
+                "  </small>" +
+                "  <small-two>" +
+                "  </small-two>" +
+                "</big>";
         Document document = new SAXBuilder().build(new StringReader(xml));
-        return new JDomReader(document);
+        Element element = document.getRootElement().getChild("small");
+
+        HierarchicalStreamReader xmlReader = new JDomReader(element);
+        assertEquals("small", xmlReader.getNodeName());
+        xmlReader.moveDown();
+        assertEquals("tiny", xmlReader.getNodeName());
+    }
+
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + JDOMParseException.class.getName() + " expected");
+        } catch (final JDOMParseException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
     }
 
     // inherits tests from superclass
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/SjsxpReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/SjsxpReaderTest.java
index 46e03227b..15c7b8e35 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/SjsxpReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/SjsxpReaderTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2011 XStream Committers.
+ * Copyright (C) 2011, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -10,6 +10,7 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
@@ -47,5 +48,17 @@ protected HierarchicalStreamReader createReader(String xml) throws Exception {
         return driver.createReader(new StringReader(xml));
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("ParseError") && message.contains("[1,1]")) {
+                throw e;
+            }
+        }
+    }
+
     // inherits tests from superclass
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/StandardStaxReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/StandardStaxReaderTest.java
new file mode 100644
index 000000000..e1e64d740
--- /dev/null
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/StandardStaxReaderTest.java
@@ -0,0 +1,41 @@
+/*
+ * Copyright (C) 2015 XStream Committers.
+ * All rights reserved.
+ *
+ * The software in this package is published under the terms of the BSD
+ * style license a copy of which has been included with this distribution in
+ * the LICENSE.txt file.
+ * 
+ * Created on 29. September 2015 by Joerg Schaible
+ */
+package com.thoughtworks.xstream.io.xml;
+
+import com.thoughtworks.xstream.XStreamException;
+import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
+import com.thoughtworks.xstream.io.HierarchicalStreamReader;
+
+import java.io.StringReader;
+
+public class StandardStaxReaderTest extends AbstractXMLReaderTest {
+    
+    private HierarchicalStreamDriver driver = new StandardStaxDriver();
+
+    // factory method
+    protected HierarchicalStreamReader createReader(String xml) throws Exception {
+        return driver.createReader(new StringReader(xml));
+    }
+
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("ParseError") && message.contains("[1,1]")) {
+                throw e;
+            }
+        }
+    }
+
+    // inherits tests from superclass
+}
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
index 3fa489d9e..bcc6fd815 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
@@ -1,25 +1,41 @@
 /*
  * Copyright (C) 2004 Joe Walnes.
- * Copyright (C) 2006, 2007 XStream Committers.
+ * Copyright (C) 2006, 2007, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
  * style license a copy of which has been included with this distribution in
  * the LICENSE.txt file.
- * 
+ *
  * Created on 29. September 2004 by James Strachan
  */
 package com.thoughtworks.xstream.io.xml;
 
+import java.io.StringReader;
+
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
-import java.io.StringReader;
 
 public class StaxReaderTest extends AbstractXMLReaderTest {
-    protected HierarchicalStreamReader createReader(String xml) throws Exception {
-        StaxDriver driver = new StaxDriver();
+    @Override
+    protected HierarchicalStreamReader createReader(final String xml) throws Exception {
+        final StaxDriver driver = new StaxDriver();
         return driver.createReader(new StringReader(xml));
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + XStreamException.class.getName() + " expected");
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
+    }
+
     // inherits tests from superclass
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/WstxReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/WstxReaderTest.java
index e486d51f5..926ae2770 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/WstxReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/WstxReaderTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2011 XStream Committers.
+ * Copyright (C) 2011, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -10,6 +10,7 @@
  */
 package com.thoughtworks.xstream.io.xml;
 
+import com.thoughtworks.xstream.XStreamException;
 import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
@@ -24,5 +25,18 @@ protected HierarchicalStreamReader createReader(String xml) throws Exception {
         return driver.createReader(new StringReader(xml));
     }
 
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + XStreamException.class.getName() + " expected");
+        } catch (final XStreamException e) {
+            final String message = e.getMessage();
+            if (message.contains("Package")) {
+                throw e;
+            }
+        }
+    }
+
     // inherits tests from superclass
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/XomReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/XomReaderTest.java
index 491222f18..7ca27698d 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/XomReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/XomReaderTest.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2004 Joe Walnes.
- * Copyright (C) 2006, 2007 XStream Committers.
+ * Copyright (C) 2006, 2007, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -15,15 +15,47 @@
 
 import nu.xom.Builder;
 import nu.xom.Document;
+import nu.xom.Element;
 
 import java.io.StringReader;
+import java.net.UnknownHostException;
 
 public class XomReaderTest extends AbstractXMLReaderTest {
 
     // factory method
     protected HierarchicalStreamReader createReader(String xml) throws Exception {
+        return new XomDriver().createReader(new StringReader(xml));
+    }
+
+    public void testCanReadFromElementOfLargerDocument() throws Exception {
+        String xml ="" +
+                "<big>" +
+                "  <small>" +
+                "    <tiny/>" +
+                "  </small>" +
+                "  <small-two>" +
+                "  </small-two>" +
+                "</big>";
         Document document = new Builder().build(new StringReader(xml));
-        return new XomReader(document);
+        Element element = document.getRootElement().getFirstChildElement("small");
+
+        HierarchicalStreamReader xmlReader = new XomReader(element);
+        assertEquals("small", xmlReader.getNodeName());
+        xmlReader.moveDown();
+        assertEquals("tiny", xmlReader.getNodeName());
+    }
+
+    @Override
+    public void testIsXXEVulnerable() throws Exception {
+        try {
+            super.testIsXXEVulnerable();
+            fail("Thrown " + UnknownHostException.class.getName() + " expected");
+        } catch (final UnknownHostException e) {
+            final String message = e.getMessage();
+            if (message.contains("file")) {
+                throw e;
+            }
+        }
     }
 
     // inherits tests from superclass
