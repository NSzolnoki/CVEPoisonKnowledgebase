diff --git a/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/feature/CreateAccountIT.java b/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/feature/CreateAccountIT.java
index d4c831868b7..5cd1dee46b8 100644
--- a/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/feature/CreateAccountIT.java
+++ b/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/feature/CreateAccountIT.java
@@ -239,6 +239,8 @@ public void check_CSRF() throws Exception {
         String csrf = IntegrationTestUtils.extractCookieCsrf(getCreateAccountResponse.getBody());
         requestBody.add(CookieBasedCsrfTokenRepository.DEFAULT_CSRF_COOKIE_NAME, csrf);
 
+        int receivedEmailSize = simpleSmtpServer.getReceivedEmailSize();
+
         headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
         getCreateAccountResponse = template.exchange(baseUrl + "/create_account.do",
           HttpMethod.POST,
@@ -247,6 +249,11 @@ public void check_CSRF() throws Exception {
         headers.clear();
 
         assertThat(getCreateAccountResponse.getStatusCode(), is(HttpStatus.FOUND));
+
+        assertEquals(receivedEmailSize + 1, simpleSmtpServer.getReceivedEmailSize());
+        Iterator receivedEmail = simpleSmtpServer.getReceivedEmail();
+        receivedEmail.next();
+        receivedEmail.remove();
     }
 
 }
diff --git a/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/util/IntegrationTestUtils.java b/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/util/IntegrationTestUtils.java
index 2695fcee8b5..ca159f0e20d 100644
--- a/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/util/IntegrationTestUtils.java
+++ b/uaa/src/test/java/org/cloudfoundry/identity/uaa/integration/util/IntegrationTestUtils.java
@@ -867,9 +867,9 @@ public static IdentityProvider createOidcIdentityProvider(String name, String or
         identityProvider.setIdentityZoneId(OriginKeys.UAA);
         OIDCIdentityProviderDefinition config = new OIDCIdentityProviderDefinition();
         config.addAttributeMapping(USER_NAME_ATTRIBUTE_NAME, "user_name");
-        config.setAuthUrl(new URL("https://oidc10.uaa-acceptance.cf-app.com/oauth/authorize"));
-        config.setTokenUrl(new URL("https://oidc10.uaa-acceptance.cf-app.com/oauth/token"));
-        config.setTokenKeyUrl(new URL("https://oidc10.uaa-acceptance.cf-app.com/token_key"));
+        config.setAuthUrl(new URL("https://oidc10.oms.identity.team/oauth/authorize"));
+        config.setTokenUrl(new URL("https://oidc10.oms.identity.team/oauth/token"));
+        config.setTokenKeyUrl(new URL("https://oidc10.oms.identity.team/token_key"));
         config.setShowLinkText(true);
         config.setLinkText("My OIDC Provider");
         config.setSkipSslValidation(true);
