diff --git a/deltaspike/modules/jsf/impl/src/main/resources/META-INF/resources/deltaspike/windowhandler.js b/deltaspike/modules/jsf/impl/src/main/resources/META-INF/resources/deltaspike/windowhandler.js
index 2498775bc..851a35c0e 100644
--- a/deltaspike/modules/jsf/impl/src/main/resources/META-INF/resources/deltaspike/windowhandler.js
+++ b/deltaspike/modules/jsf/impl/src/main/resources/META-INF/resources/deltaspike/windowhandler.js
@@ -244,7 +244,7 @@ window.dswh = window.dswh || {
                     return false;
                 }
 
-                if (href === '#') {
+                if (href.indexOf('#') === 0) {
                     return false;
                 }
 
@@ -423,24 +423,39 @@ window.dswh = window.dswh || {
 
     utils : {
 
+        findRootWindow: function() {
+            var w = window;
+            while(w.frameElement) {
+                var parent = w.parent;
+                if (parent === undefined) {
+                    break;
+                }
+                w = parent;
+            };
+
+            return w;
+        },
+
         isWindowNameDefined : function() {
-            return window.name && window.name.length > 0;
+            var w = dswh.utils.findRootWindow();
+            return w.name && w.name.length > 0;
         },
 
         isManagedWindowName : function() {
-            if (!window.name) {
+            var w = dswh.utils.findRootWindow();
+            if (!w.name) {
                 return false;
             }
 
-            return window.name.indexOf(dswh.MANAGED_WINDOW_NAME_PREFIX) === 0;
+            return w.name.indexOf(dswh.MANAGED_WINDOW_NAME_PREFIX) === 0;
         },
 
         getWindowIdFromWindowName : function() {
-            return window.name.substring(dswh.MANAGED_WINDOW_NAME_PREFIX.length);
+            return dswh.utils.findRootWindow().name.substring(dswh.MANAGED_WINDOW_NAME_PREFIX.length);
         },
 
         setWindowIdAsWindowName : function(windowId) {
-            window.name = dswh.MANAGED_WINDOW_NAME_PREFIX + windowId;
+            dswh.utils.findRootWindow().name = dswh.MANAGED_WINDOW_NAME_PREFIX + windowId;
         },
 
         requestNewWindowId : function() {
diff --git a/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/WindowScopedContextFrameTest.java b/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/WindowScopedContextFrameTest.java
new file mode 100644
index 000000000..5e57d35ce
--- /dev/null
+++ b/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/WindowScopedContextFrameTest.java
@@ -0,0 +1,101 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.deltaspike.test.jsf.impl.scope.window;
+
+
+import org.apache.deltaspike.test.category.WebProfileCategory;
+import org.apache.deltaspike.test.jsf.impl.config.TestJsfModuleConfig;
+import org.apache.deltaspike.test.jsf.impl.scope.window.beans.WindowScopedBackingBean;
+import org.apache.deltaspike.test.jsf.impl.util.ArchiveUtils;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.container.test.api.RunAsClient;
+import org.jboss.arquillian.drone.api.annotation.Drone;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.arquillian.test.api.ArquillianResource;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+import org.junit.runner.RunWith;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.htmlunit.HtmlUnitDriver;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+
+import java.net.URL;
+import java.util.logging.Logger;
+
+
+/**
+ * Test for the DeltaSpike JsfMessage Producer
+ */
+@RunWith(Arquillian.class)
+@Category(WebProfileCategory.class)
+public class WindowScopedContextFrameTest
+{
+    private static final Logger log = Logger.getLogger(WindowScopedContextFrameTest.class.getName());
+
+    @Drone
+    private WebDriver driver;
+
+    @ArquillianResource
+    private URL contextPath;
+
+    @Deployment
+    public static WebArchive deploy()
+    {
+        return ShrinkWrap
+                .create(WebArchive.class, "windowScopedContextFrameTest.war")
+                .addPackage(WindowScopedBackingBean.class.getPackage())
+                .addClass(TestJsfModuleConfig.class)
+                .addAsLibraries(ArchiveUtils.getDeltaSpikeCoreAndJsfArchive())
+                .addAsLibraries(ArchiveUtils.getDeltaSpikeSecurityArchive())
+                .addAsWebInfResource("default/WEB-INF/web.xml", "web.xml")
+                .addAsWebResource("META-INF/resources/deltaspike/windowhandler.js",
+                                  "resources/deltaspike/windowhandler.js")
+                .addAsWebResource("windowScopedContextTest/framecontainer.xhtml", "framecontainer.xhtml")
+                .addAsWebResource("windowScopedContextTest/frame.xhtml", "frame.xhtml")
+                .addAsWebInfResource(EmptyAsset.INSTANCE, "beans.xml");
+    }
+
+
+    @Test
+    @RunAsClient
+    public void testWindowId() throws Exception
+    {
+        System.out.println("contextpath= " + contextPath);
+
+        //X comment this in if you like to debug the server
+        //X I've already reported ARQGRA-213 for it
+        //X Thread.sleep(600000L);
+
+        driver.get(new URL(contextPath, "framecontainer.xhtml").toString());
+
+        String outerId = driver.findElement(By.id("window-id")).getText();
+        String innerId = ((HtmlUnitDriver) driver).executeScript("return document.getElementById('iframe').contentWindow.document.getElementById('window-id').innerHTML").toString().trim();
+
+        Assert.assertEquals(outerId, innerId);
+
+    }
+
+
+}
diff --git a/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/beans/WindowAccessBean.java b/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/beans/WindowAccessBean.java
new file mode 100644
index 000000000..c845db9c1
--- /dev/null
+++ b/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/beans/WindowAccessBean.java
@@ -0,0 +1,43 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.deltaspike.test.jsf.impl.scope.window.beans;
+
+import org.apache.deltaspike.core.api.scope.WindowScoped;
+import org.apache.deltaspike.core.spi.scope.window.WindowContext;
+
+import javax.inject.Inject;
+import javax.inject.Named;
+import java.io.Serializable;
+
+@Named
+@WindowScoped
+public class WindowAccessBean implements Serializable
+{
+
+    private static final long serialVersionUID = 1L;
+
+    @Inject
+    WindowContext windowContext;
+
+    public String getId()
+    {
+        return windowContext.getCurrentWindowId();
+    }
+
+}
diff --git a/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/frame.xhtml b/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/frame.xhtml
new file mode 100644
index 000000000..391167f00
--- /dev/null
+++ b/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/frame.xhtml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:h="http://java.sun.com/jsf/html"
+      xmlns:f="http://java.sun.com/jsf/core"
+      xmlns:ui="http://java.sun.com/jsf/facelets"
+      xmlns:c="http://java.sun.com/jsp/jstl/core"
+      xmlns:ds="http://deltaspike.apache.org/jsf">
+
+<h:head>
+
+</h:head>
+
+<h:body>
+<ds:windowId/>
+<div id="window-id">
+    #{windowAccessBean.id}
+</div>
+</h:body>
+</html>
diff --git a/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/framecontainer.xhtml b/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/framecontainer.xhtml
new file mode 100644
index 000000000..25bae9e37
--- /dev/null
+++ b/deltaspike/modules/jsf/impl/src/test/resources/windowScopedContextTest/framecontainer.xhtml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:h="http://java.sun.com/jsf/html"
+      xmlns:f="http://java.sun.com/jsf/core"
+      xmlns:ui="http://java.sun.com/jsf/facelets"
+      xmlns:c="http://java.sun.com/jsp/jstl/core"
+      xmlns:ds="http://deltaspike.apache.org/jsf">
+
+<h:head>
+
+</h:head>
+
+<h:body>
+<ds:windowId/>
+    <div id="window-id">
+        #{windowAccessBean.id}
+    </div>
+    <iframe id="iframe" src="#{facesContext.externalContext.context.contextPath}/frame.xhtml"></iframe>
+</h:body>
+</html>
